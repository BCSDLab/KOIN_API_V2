name: Flyway Dangerous SQL Validator
# 블루/그린 배포 환경에서 기존 WAS와 DB의 스키마 불일치하는 오류를 방지한다.

on:
  pull_request:
    paths:
      - "**"

jobs:
  check-flyway-dangerous-sql:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Validate Dangerous SQL and Non-Flyway Changes
        run: |
          CHANGED_FILES=$(
            git diff --name-only \
              ${{ github.event.pull_request.base.sha }} \
              ${{ github.event.pull_request.head.sha }}
          )
          NON_FLYWAY_FILES_CHANGES=$(
            echo "$CHANGED_FILES" \
             | grep -v '^src/main/resources/db/migration/' \
             || true
          )
          
          DANGEROUS_SQL_COMMANDS=$(
            git diff --unified=0 \
              ${{ github.event.pull_request.base.sha }} \
              ${{ github.event.pull_request.head.sha }} \
              -- src/main/resources/db/migration/*.sql \
              | grep -i -wE "^\+.*\b(DROP|TRUNCATE|RENAME|MODIFY|CHANGE)\b" \
              || true
          )
          
          if [[ -n "$DANGEROUS_SQL_COMMANDS" && -n "$NON_FLYWAY_FILES_CHANGES" ]]; then
            echo "::error::코드 변경사항과 파괴적 SQL 명령이 동시에 감지되었습니다. PR을 분리하거나 위험 SQL을 제거한 후 다시 시도해주세요."
            exit 1
          fi
