plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.5'
    id 'io.spring.dependency-management' version '1.1.3'
}

group = 'in.koreatech'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation group: 'org.json', name: 'json', version: '20231013'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'com.mysql:mysql-connector-j'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'

    implementation 'net.logstash.logback:logstash-logback-encoder:8.0'

    implementation 'io.jsonwebtoken:jjwt-api:0.12.3'

    implementation 'org.jsoup:jsoup:1.15.3'
    implementation 'com.amazonaws:aws-java-sdk:1.12.672'
    implementation 'com.google.code.gson:gson:2.10.1'

    // swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'

    // security
    implementation 'org.springframework.security:spring-security-crypto:6.2.2'

    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.3'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.3'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'com.mysql:mysql-connector-j'
    compileOnly 'org.projectlombok:lombok'

    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.testcontainers:testcontainers:1.19.3'
    testImplementation 'org.testcontainers:junit-jupiter:1.19.3'
    testImplementation 'org.testcontainers:mysql'
    testImplementation 'io.rest-assured:rest-assured:5.3.2'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // presigned url
    implementation platform('software.amazon.awssdk:bom:2.20.56')
    implementation 'software.amazon.awssdk:s3'

    // localstack
    testImplementation 'org.testcontainers:localstack'

    // flyway
    implementation 'org.flywaydb:flyway-mysql'

    // fcm
    implementation 'com.google.firebase:firebase-admin:9.2.0'

    // Actuator
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // slack Notification
    implementation 'com.github.maricn:logback-slack-appender:1.4.0'

    // resilience4j
    implementation 'io.github.resilience4j:resilience4j-spring-boot3:2.1.0'
    implementation 'org.springframework.boot:spring-boot-starter-aop'

    // userAgent parser
    implementation 'com.github.ua-parser:uap-java:1.4.4'

    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // Redisson
    implementation 'org.redisson:redisson-spring-boot-starter:3.35.0'

    // Excel
    implementation 'org.apache.poi:poi-ooxml:5.2.5'
    implementation 'com.opencsv:opencsv:5.9'

    //websocket
    implementation 'org.springframework.boot:spring-boot-starter-websocket'

    //tsid generator
    implementation('com.github.f4b6a3:tsid-creator:5.2.6')
}

clean {
    delete file('src/main/generated')
}

tasks.named('bootBuildImage') {
    builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.named('test') {
    useJUnitPlatform()
}
